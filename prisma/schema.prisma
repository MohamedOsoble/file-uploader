// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  username      String   @unique
  email         String   @unique
  hash          String
  salt          String
  profile       Profile  @relation(fields: [profileId], references: [id])
  role          Role     @default(USER)
  rootFolderId  String?
  uploadedFiles File[]
  folders       Folder[]
  profileId     String
}

model Profile {
  id        String  @id @default(uuid())
  firstName String?
  lastName  String?
  age       Int?
  bio       String?
  User      User[]
}

model File {
  id           String @id
  name         String
  originalName String
  size         Int
  uploader     User   @relation(fields: [uploaderId], references: [id], onDelete: Cascade)
  uploaderId   String
  folder       Folder @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId     String
  location     String
}

model Folder {
  id       String   @id @default(uuid())
  name     String
  files    File[]
  owner    User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId  String
  parentId String?
  parent   Folder?  @relation("ParentChildFolders", fields: [parentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  children Folder[] @relation("ParentChildFolders")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

enum Role {
  USER
  MODERATOR
  ADMIN
}
